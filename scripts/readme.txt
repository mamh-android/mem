Short explanations of scripts here:

- meminfo.sh / summarize_meminfo.sh / compare_pss.sh / compare_suminfo.sh / collect_info.sh
  Scripts to collect and analyze memory footprint status on device

  * collect_info.sh: Collect all relevant info from device (via adb), mainly for
    memory info though, and creat all file dumps in current directory
    Usage:
    collect_info.sh

  * meminfo.sh:  Collect all memory related information from device (via adb) and
    generate text output, which can be later parsed by summarize_meminfo.sh for a
    summary
    Usage:
    meminfo.sh > meminfo.log

  * summarize_meminfo.sh : Summarize overall memory info from text generated by
    meminfo.sh
    Usage:
    summarize_meminfo.sh meminfo.log > suminfo.log

  * getmeminfo: Perl script rewritten to replace meminfo.sh and summarize_meminfo.sh

  * compare_pss.sh: Compare processes Pss in two meminfo.log, and generate
    pss_compare.txt to be imported to Excel (Use default 'TAB' as delimeter)
    Usage:
    compare_pss.sh meminfo0.log meminfo1.log

  * compare_suminfo.sh: Compare summary generated by summarize_meminfo.sh, and
    generate mem_summary_compare.txt to be imported to Excel (Use default 'TAB' as delimeter)
    Usage:
    compare_suminfo.sh suminfo0.log suminfo1.log

- compare_heapdumps
  Compares two "am dumpheap -n <pid>" native heap dumps and show report. Useful
  for leak detection

- adb_valgrind
  Wrapper script for easier usage of valgrind on device

- adb_watch
  Script to 'watch' adb shell outputs

- ksm_enable.sh
  Enables/disables KSM feature on device. If no parameters supplied, it enables
  ksm on device, or if "ksm_enable.sh 0", disables ksm on device.

- zram_enable.sh
  Enables/disables zRAM feature on device. If no parameters supplied, it enables
  zRAM on device, or if "zram_enable.sh 0", disables zRAM on device.

- zram_trace_mem.sh
  Excel friendly output to track zRAM memory savings

- ftrace_*.sh
  Handy scripts to enable commonly used ftraces for memory analysis and also
  capturing traces

